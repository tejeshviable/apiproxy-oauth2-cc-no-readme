<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
  <Description>the main proxy endpoint</Description>
  <HTTPProxyConnection>
    <BasePath>/oauth2-cc</BasePath>
    <Properties/>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>
  <FaultRules/>
  <DefaultFaultRule name="fault-rule">
    <Step>
      <Name>AM-Inject-Proxy-Revision-Header</Name>
    </Step>
    <AlwaysEnforce>true</AlwaysEnforce>
  </DefaultFaultRule>
  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>AE-Developer</Name>
      </Step>
      <Step>
        <Name>EV-Developer-Custom-Attributes</Name>
      </Step>
      <Step>
        <Name>RF-Invalid-Grant-Type</Name>
        <Condition>request.formparam.grant_type != "client_credentials"</Condition>
      </Step>
      <Step>
        <Name>AM-PrivateKey-Variable</Name>
      </Step>
      <Step>
        <Name>JS-SetCustomUserRole</Name>
      </Step>
      <Step>
        <Name>OAuthV2-GenerateJWT-AT-CC</Name>
      </Step>
      <Step>
        <Name>OAuthV2-SetInfo</Name>
      </Step>
    </Request>
    <Response/>
  </PreFlow>
  <PostFlow name="PostFlow">
    <Request/>
    <Response>
      <Step>
        <Name>AM-Clean-Response-Headers</Name>
      </Step>
      <Step>
        <Name>JS-Groom-Token-Response</Name>
        <Condition>request.formparam.grant_type = "client_credentials"</Condition>
      </Step>
      <Step>
        <Name>AM-Inject-Proxy-Revision-Header</Name>
      </Step>
      <Step>
        <Name>AM-TokenHeader</Name>
        <Condition>apigee.access_token != null</Condition>
      </Step>
    </Response>
  </PostFlow>
  <Flows>
    <!--<Flow name="opaque token">-->
    <!--    <Description>dispense opaque tokens for OAuth2.0, for Client credentials</Description>-->
    <!--    <Request>-->
    <!--        <Step>-->
    <!--            <Name>RF-Invalid-Grant-Type</Name>-->
    <!--            <Condition>request.formparam.grant_type != "client_credentials"</Condition>-->
    <!--        </Step>-->
    <!--    </Request>-->
    <!--    <Response/>-->
    <!--    <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>-->
    <!--</Flow>-->
    <!--<Flow name="JWT token">-->
    <!--    <Description>dispense JWT for OAuth2.0, for Client credentials</Description>-->
    <!--    <Request>-->
    <!--        <Step>-->
    <!--            <Name>RF-Invalid-Grant-Type</Name>-->
    <!--            <Condition>request.formparam.grant_type != "client_credentials"</Condition>-->
    <!--        </Step>-->
    <!--        <Step>-->
    <!--            <Name>AM-PrivateKey-Variable</Name>-->
    <!--        </Step>-->
    <!--        <Step>-->
    <!--            <Name>JS-SetCustomUserRole</Name>-->
    <!--        </Step>-->
    <!--        <Step>-->
    <!--            <Name>OAuthV2-GenerateJWT-AT-CC</Name>-->
    <!--        </Step>-->
    <!--        <Step>-->
    <!--            <Name>OAuthV2-SetInfo</Name>-->
    <!--        </Step>-->
    <!--    </Request>-->
    <!--    <Response/>-->
    <!--    <Condition>(proxy.pathsuffix MatchesPath "/jwt") and (request.verb = "POST")</Condition>-->
    <!--</Flow>-->
    <Flow name="Token Verification">
      <Request>
        <Step>
          <Name>OAuthV2-VerifyAccessToken</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>JS-ConditionalBehavior</Name>
        </Step>
      </Response>
      <Condition>(proxy.pathsuffix MatchesPath "/ipification") and (request.verb = "POST")</Condition>
    </Flow>
    <Flow name="unknown request">
      <Request>
        <Step>
          <Name>RF-Unknown-Request</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>
  </Flows>
  <!-- There is no backend target. Responses for oauth token generation and
     refresh are direct from this API proxy.
-->
  <RouteRule name="NoRouteRule"/>
</ProxyEndpoint>